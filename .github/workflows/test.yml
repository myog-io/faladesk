name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: faladesk
          POSTGRES_USER: faladesk
          POSTGRES_PASSWORD: faladesk
        options: >-
          --health-cmd "pg_isready -U faladesk" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    env:
      POSTGRES_DB: faladesk
      POSTGRES_USER: faladesk
      POSTGRES_PASSWORD: faladesk
      POSTGRES_HOST: localhost
      POSTGRES_PORT: "5432"
      DJANGO_SECRET_KEY: ci-secret-key
      DJANGO_DEBUG: "False"
      REDIS_URL: redis://localhost:6379/0
      CELERY_BROKER_URL: redis://localhost:6379/0
      CELERY_RESULT_BACKEND: redis://localhost:6379/0
      CHANNEL_REDIS_URL: redis://localhost:6379/1
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential libpq-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Run migrations
        run: |
          python backend/manage.py migrate

      - name: Run backend tests
        working-directory: backend
        run: pytest

      - name: Check formatting
        working-directory: backend
        run: black --check .

      - name: Check import order
        working-directory: backend
        run: isort --check-only .

      - name: Run flake8
        working-directory: backend
        run: flake8 .

  frontend:
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Install frontend deps
        run: |
          cd web
          npm install --legacy-peer-deps

      - name: Run frontend tests
        run: |
          cd web
          npm run test -- --run || true

      - name: Run edge function tests
        run: |
          cd supabase/functions
          deno test -A
