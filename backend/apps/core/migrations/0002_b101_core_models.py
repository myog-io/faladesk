# Generated by Faladesk Task B101

import uuid

import django.db.models.deletion
import django.utils.timezone
import django_tenants.postgresql_backend.base
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="user",
            name="avatar_url",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="user",
            name="full_name",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="user",
            name="language",
            field=models.CharField(
                choices=[("pt-br", "Português (Brasil)"), ("en", "Inglês"), ("es", "Espanhol")],
                default="pt-br",
                max_length=10,
            ),
        ),
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "schema_name",
                    models.CharField(
                        db_index=True,
                        max_length=63,
                        unique=True,
                        validators=[django_tenants.postgresql_backend.base._check_schema_name],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(unique=True)),
                ("timezone", models.CharField(default="UTC", max_length=64)),
                ("default_language", models.CharField(default="pt-br", max_length=10)),
                ("plan", models.CharField(default="free", max_length=64)),
                ("is_active", models.BooleanField(default=True)),
                ("onboarding_completed", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Ativo"),
                            ("suspended", "Suspenso"),
                            ("archived", "Arquivado"),
                        ],
                        default="active",
                        max_length=32,
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "verbose_name": "Tenant",
                "verbose_name_plural": "Tenants",
            },
        ),
        migrations.CreateModel(
            name="TenantDomain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("domain", models.CharField(db_index=True, max_length=253, unique=True)),
                ("is_primary", models.BooleanField(db_index=True, default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="domains",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Domínio do Tenant",
                "verbose_name_plural": "Domínios do Tenant",
            },
        ),
        migrations.CreateModel(
            name="TenantSetting",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("key", models.CharField(max_length=150)),
                ("value", models.JSONField(blank=True, default=dict)),
                ("description", models.CharField(blank=True, max_length=255)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuração do Tenant",
                "verbose_name_plural": "Configurações do Tenant",
                "unique_together": {("tenant", "key")},
            },
        ),
        migrations.CreateModel(
            name="TenantSubscription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("plan", models.CharField(max_length=64)),
                ("seats", models.PositiveIntegerField(default=5)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("trial", "Teste"),
                            ("active", "Ativo"),
                            ("past_due", "Em atraso"),
                            ("canceled", "Cancelado"),
                        ],
                        default="trial",
                        max_length=32,
                    ),
                ),
                ("billing_email", models.EmailField(blank=True, max_length=254)),
                ("started_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("renews_at", models.DateTimeField(blank=True, null=True)),
                (
                    "tenant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Assinatura do Tenant",
                "verbose_name_plural": "Assinaturas do Tenant",
            },
        ),
        migrations.CreateModel(
            name="ServiceAccount",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=150)),
                ("description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Ativa"), ("disabled", "Desativada")],
                        default="active",
                        max_length=32,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_service_accounts",
                        to="core.user",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_accounts",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conta de Serviço",
                "verbose_name_plural": "Contas de Serviço",
            },
        ),
        migrations.CreateModel(
            name="TenantUser",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("invited", "Convidado"),
                            ("active", "Ativo"),
                            ("suspended", "Suspenso"),
                            ("disabled", "Desativado"),
                        ],
                        default="invited",
                        max_length=32,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=120)),
                ("joined_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_active_at", models.DateTimeField(blank=True, null=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="core.tenant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_memberships",
                        to="core.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário do Tenant",
                "verbose_name_plural": "Usuários do Tenant",
                "unique_together": {("tenant", "user")},
            },
        ),
        migrations.CreateModel(
            name="TenantInvitation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(max_length=254)),
                ("token", models.CharField(editable=False, max_length=64, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("accepted", "Aceito"),
                            ("expired", "Expirado"),
                            ("revoked", "Revogado"),
                        ],
                        default="pending",
                        max_length=32,
                    ),
                ),
                ("expires_at", models.DateTimeField()),
                ("accepted_at", models.DateTimeField(blank=True, null=True)),
                ("role_slug", models.SlugField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "invited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_invitations",
                        to="core.user",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Convite do Tenant",
                "verbose_name_plural": "Convites do Tenant",
                "unique_together": {("tenant", "email", "status")},
            },
        ),
        migrations.CreateModel(
            name="TenantUserPreference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "theme",
                    models.CharField(
                        choices=[("system", "Padrão do sistema"), ("light", "Claro"), ("dark", "Escuro")],
                        default="system",
                        max_length=20,
                    ),
                ),
                ("notifications", models.JSONField(blank=True, default=dict)),
                ("locale_overrides", models.JSONField(blank=True, default=dict)),
                (
                    "tenant_user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to="core.tenantuser",
                    ),
                ),
            ],
            options={
                "verbose_name": "Preferência do Usuário",
            },
        ),
        migrations.CreateModel(
            name="ServiceAccountKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=150)),
                ("key_id", models.CharField(editable=False, max_length=24, unique=True)),
                ("hashed_secret", models.CharField(editable=False, max_length=128)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "service_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="keys",
                        to="core.serviceaccount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chave de Conta de Serviço",
            },
        ),
        migrations.CreateModel(
            name="LoginToken",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("token", models.CharField(editable=False, max_length=64, unique=True)),
                ("purpose", models.CharField(default="login", max_length=32)),
                ("expires_at", models.DateTimeField()),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=255)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="login_tokens",
                        to="core.tenant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="login_tokens",
                        to="core.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Token de Login",
                "verbose_name_plural": "Tokens de Login",
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("event", models.CharField(max_length=150)),
                ("payload", models.JSONField(blank=True, default=dict)),
                ("recorded_at", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=255)),
                (
                    "actor_service_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to="core.serviceaccount",
                    ),
                ),
                (
                    "actor_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to="core.user",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_logs",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Registro de Auditoria",
                "verbose_name_plural": "Registros de Auditoria",
                "ordering": ["-recorded_at"],
            },
        ),
    ]
